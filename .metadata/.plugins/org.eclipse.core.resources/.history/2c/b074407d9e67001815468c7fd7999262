package com.dtyunxi.nuskin.tw.personaloffer.external.proxy;

import java.util.List;


import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.web.multipart.MultipartFile;

import com.dtyunxi.nuskin.tw.personaloffer.client.api.UserQueryService;
import com.dtyunxi.nuskin.tw.personaloffer.client.model.Result;
import com.dtyunxi.nuskin.tw.personaloffer.client.model.UserDO;
//import WebMember;
//import com.dtyunxi.nuskin.tw.center.member.api.INuskinMemberBaseApi;
import com.dtyunxi.nuskin.tw.center.member.api.WebPOMemberApi;
import com.dtyunxi.nuskin.tw.center.member.dto.WebPOUserDto;
import com.dtyunxi.nuskin.tw.center.member.eo.WebMemberEo;
import com.dtyunxi.rest.RestResponse;

@Service
public class UserQueryServiceProxy {
	private static final Logger log = LoggerFactory.getLogger(UserQueryServiceProxy.class);


	@Autowired
	private UserQueryService userQueryService;
//	@Autowired
//	private INuskinMemberBaseApi iNuskinMemberBaseApi;
	@Autowired
	private WebPOMemberApi webPOMemberApi;
	
	
	public Result<List<UserDO>> getUsers(Integer pageNum, Integer pageSize) {
		try {
			return userQueryService.getUsers(pageNum, pageSize);
		} catch (Exception e) {
			log.error("call getUsers(" + pageNum + "," + pageSize + ") failed!" );
		}
		return null;
	}

	/**
	 * @param token
	 * @return
	 */
	public RestResponse logout(String token) {
		return webPOMemberApi.logout(token);
	}

	/**
	 * @param nickName
	 * @return
	 */
	public RestResponse checkNickName(String nickName, String memberId) {
		return webPOMemberApi.checkNickName(nickName, memberId);
	}

	/**
	 * @param user
	 * @return
	 */
	public RestResponse login(WebPOUserDto webPOUserDto) {
		return webPOMemberApi.login(webPOUserDto);
	}

	/**
	 * @param token
	 */
	public RestResponse getMemberInfoByToken(String token) {
		return webPOMemberApi.getMemberInfoByToken(token);
		
	}

	/**
	 * @auther zhu.rongkun
	 * @param webMember
	 * @return
	 */
	public RestResponse updateUserInfo(WebMemberEo webMemberEo) {
		return webPOMemberApi.updateUserInfo(webMemberEo);
	}

	/**
	 * @auther zhu.rongkun
	 * @param nickName
	 * @param memberId
	 * @return
	 */
	public RestResponse updateNickName(String nickName, String memberId) {
		return webPOMemberApi.updateNickName(nickName, memberId);
	}
	
}
